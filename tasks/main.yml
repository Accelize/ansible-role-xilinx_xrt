---

- name: Get "xbutil" file information
  stat:
    path: /opt/xilinx/xrt/bin/xbutil
  register: xbutil
  when: xilinx_xrt_install | bool

- name: Create temporary directory
  tempfile:
    state: directory
    prefix: xrt_
  register: xrt_tmp
  notify: Clean up temporary directory
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists

- name: Download XRT package
  get_url:
    url: "{{ xrt_source }}"
    dest: "{{ xrt_tmp.path }}/{{ xrt_package }}"
  retries: 10
  delay: 1
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists

- name: Download XRT package signature
  get_url:
    url: "{{ xrt_source }}.sig"
    dest: "{{ xrt_tmp.path }}/{{ xrt_package }}.sig"
  retries: 10
  delay: 1
  failed_when: false  # May be not available
  register: xrt_package_sig
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists

- name: Ensure GPG is installed
  package:
    name: gnupg
    state: present
  retries: 10
  delay: 1
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_sig.changed

- name: Download Xilinx master signing key
  get_url:
    url: "https://www.xilinx.com/support/download/xilinx-master-signing-key.asc"
    dest: "{{ xrt_tmp.path }}/xilinx-master-signing-key.asc"
  retries: 10
  delay: 1
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_sig.changed

- name: Ensure Xilinx master signing key is imported in GPG
  command: "gpg --import {{ xrt_tmp.path }}/xilinx-master-signing-key.asc"
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_sig.changed

- name: Verify XRT package signature
  command: "gpg --verify {{ xrt_package }}.sig {{ xrt_package }}"
  args:
    chdir: "{{ xrt_tmp.path }}"
  changed_when: false
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_sig.changed

- name: Download XRT package checksum
  get_url:
    url: "{{ xrt_source }}.digests"
    dest: "{{ xrt_tmp.path }}/{{ xrt_package }}.digests"
  retries: 10
  delay: 1
  failed_when: false  # May be not available
  register: xrt_package_digests
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists

- name: Verify XRT package checksum
  command: sha512sum -c {{ xrt_package }}.digests
  args:
    chdir: "{{ xrt_tmp.path }}"
  changed_when: false
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_digests.changed

- name: Ensure EPEL repository is installed
  yum:
    name: epel-release
    state: present
    install_weak_deps: false
  retries: 10
  delay: 1
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - ansible_os_family == 'RedHat'

- name: Ensure Kernel headers RPM are installed
  yum:
    name:
      - "kernel-devel-{{ ansible_kernel }}"
      - "kernel-headers-{{ ansible_kernel }}"
    state: present
    install_weak_deps: false
    enablerepo: C7.*
  retries: 10
  delay: 1
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - ansible_os_family == 'RedHat'
  tags:
    - molecule-notest  # Bad detected kernel version from container

- name: Ensure XRT RPM package is installed
  yum:
    name: "{{ xrt_tmp.path }}/{{ xrt_package }}"
    state: present
    install_weak_deps: false
  retries: 10
  delay: 1
  when:
    - xilinx_xrt_install | bool
    - ansible_os_family == 'RedHat'
    - not xbutil.stat.exists

- name: Ensure APT cache is up to date
  apt:
    update_cache: true
  changed_when: false
  when:
    - xilinx_xrt_install | bool
    - ansible_os_family == 'Debian'
    - not xbutil.stat.exists

- name: Ensure Kernel headers DEB are installed
  apt:
    name: "linux-headers-{{ ansible_kernel }}-generic"
  when:
    - xilinx_xrt_install | bool
    - ansible_os_family == 'Debian'
    - not xbutil.stat.exists
  tags:
    - molecule-notest  # Bad detected kernel version from container

- name: Ensure XRT DEB package is installed
  package:
    deb: "{{ xrt_tmp.path }}/{{ xrt_package }}"
    state: present
    install_recommends: false
  retries: 10
  delay: 1
  when:
    - xilinx_xrt_install | bool
    - ansible_os_family == 'Debian'
    - not xbutil.stat.exists

- name: Ensure XRT is sourced in ~/.bashrc
  lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    regexp: "^source /opt/xilinx/xrt/setup.sh"
    line: source /opt/xilinx/xrt/setup.sh
  when:
    - xilinx_xrt_install | bool
    - xilinx_xrt_bashrc | bool

- include_tasks: aws.yml
  when: xilinx_xrt_env == 'aws'
