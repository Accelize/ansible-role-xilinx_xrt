---

- name: Ensure Linux kernel version is compatible
  include_role:
    name: accelize.linux_kernel
  vars:
    kernel_version: "{{ xilinx_xrt_version | xrt_kernel(ansible_facts) }}"
  when:
    - xilinx_xrt_ensure_compatible_kernel | bool
    - xilinx_xrt_install | bool

- name: Get "xbutil" file information
  stat:
    path: /opt/xilinx/xrt/bin/xbutil
  register: xbutil
  when: xilinx_xrt_install | bool

- name: Create temporary directory
  tempfile:
    state: directory
    prefix: xrt_
  register: xrt_tmp
  notify: Clean up temporary directory
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists

- name: Download XRT package
  get_url:
    url: "{{ xrt_source }}"
    dest: "{{ xrt_tmp.path }}/{{ xrt_package }}"
  retries: 10
  delay: 1
  register: _xrt
  until: _xrt is successful
  notify: Ensure Xilinx Management Proxy Daemon is started and enabled at boot
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists

- name: Download XRT package signature
  get_url:
    url: "{{ xrt_source }}.sig"
    dest: "{{ xrt_tmp.path }}/{{ xrt_package }}.sig"
  failed_when: false  # May be not available
  register: xrt_package_sig
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists

- name: Ensure GPG is installed
  package:
    name: gnupg
    state: present
  retries: 10
  delay: 1
  register: _gpg
  until: _gpg is successful
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_sig.state is defined

- name: Download Xilinx master signing key
  get_url:
    url: "https://www.xilinx.com/support/download/xilinx-master-signing-key.asc"
    dest: "{{ xrt_tmp.path }}/xilinx-master-signing-key.asc"
  retries: 10
  delay: 1
  register: _xilinx_key
  until: _xilinx_key is successful
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_sig.state is defined

- name: Ensure Xilinx master signing key is imported in GPG
  command: "gpg --import {{ xrt_tmp.path }}/xilinx-master-signing-key.asc"
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_sig.state is defined

- name: Verify XRT package signature
  command: "gpg --verify {{ xrt_package }}.sig {{ xrt_package }}"
  args:
    chdir: "{{ xrt_tmp.path }}"
  changed_when: false
  register: _xrt_sig
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_sig.state is defined

- name: Download XRT package checksum
  get_url:
    url: "{{ xrt_source }}.digests"
    dest: "{{ xrt_tmp.path }}/{{ xrt_package }}.digests"
  failed_when: false  # May be not available
  register: xrt_package_digests
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_sig.state is not defined

- name: Verify XRT package checksum
  command: sha512sum -c {{ xrt_package }}.digests
  args:
    chdir: "{{ xrt_tmp.path }}"
  changed_when: false
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - xrt_package_digests.state is defined

- name: Ensure EPEL repository is installed
  yum:
    name: "https://dl.fedoraproject.org/pub/epel/\
           epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present
    install_weak_deps: false
    disable_gpg_check: true
  retries: 10
  delay: 1
  register: _epel
  until: _epel is successful
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version in ("7", "8")

- name: Ensure RHEL optional RPMs repository is enabled
  command:
    cmd: subscription-manager repos --enable "rhel-7-server-optional-rpms"
  args:
    warn: false
  changed_when: false
  when:
    - ansible_distribution == "Red Hat Enterprise Linux"
    - ansible_distribution_major_version == "7"

- name: Ensure CodeReady Linux Builder repository is enabled
  command:
    cmd: subscription-manager repos --enable "codeready-builder-for-rhel-8-x86_64-rpms"
  args:
    warn: false
  changed_when: false
  when:
    - ansible_distribution == "Red Hat Enterprise Linux"
    - ansible_distribution_major_version == "8"

- name: Ensure DNF core plugins are installed
  dnf:
    state: present
    name: python3-dnf-plugins-core
    install_weak_deps: false
  retries: 10
  delay: 1
  register: _dnf_plugins
  until: _dnf_plugins is successful
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "8"

- name: Ensure Powertools repository is enabled
  command:
    cmd: dnf config-manager --set-enabled powertools
  args:
    warn: false
  changed_when: false
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "8"

- name: Ensure AppStream repository is enabled
  command:
    cmd: dnf config-manager --set-enabled appstream
  args:
    warn: false
  changed_when: false
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "8"

- name: Ensure Kernel headers RPM are installed
  yum:
    name:
      - "kernel-devel-{{ ansible_kernel }}"
      - "kernel-headers-{{ ansible_kernel }}"
    state: present
    install_weak_deps: false
    enablerepo: C7.*
  retries: 10
  delay: 1
  register: _kernel_rpm
  until: _kernel_rpm is successful
  when:
    - xilinx_xrt_install | bool
    - not xbutil.stat.exists
    - ansible_os_family == 'RedHat'
  tags:
    - molecule-notest  # Bad detected kernel version from container

- name: Ensure XRT RPM package is installed
  yum:
    name: "{{ xrt_tmp.path }}/{{ xrt_package }}"
    state: present
    install_weak_deps: false
    disable_gpg_check: true
  retries: 10
  delay: 1
  register: _xrt_rpm
  until: _xrt_rpm is successful
  when:
    - xilinx_xrt_install | bool
    - ansible_os_family == 'RedHat'
    - not xbutil.stat.exists

- name: Ensure APT cache is up to date
  apt:
    update_cache: true
  changed_when: false
  retries: 10
  delay: 1
  register: _apt_cache
  until: _apt_cache is successful
  when:
    - xilinx_xrt_install | bool
    - ansible_os_family == 'Debian'
    - not xbutil.stat.exists

- name: Ensure Kernel headers DEB are installed
  apt:
    name: "linux-headers-{{ ansible_kernel }}-generic"
  retries: 10
  delay: 1
  register: _kernel_deb
  until: _kernel_deb is successful
  when:
    - xilinx_xrt_install | bool
    - ansible_os_family == 'Debian'
    - not xbutil.stat.exists
  tags:
    - molecule-notest  # Bad detected kernel version from container

- name: Ensure XRT DEB package is installed
  package:
    deb: "{{ xrt_tmp.path }}/{{ xrt_package }}"
    state: present
    install_recommends: false
  retries: 10
  delay: 1
  register: _xrt_deb
  until: _xrt_deb is successful
  when:
    - xilinx_xrt_install | bool
    - ansible_os_family == 'Debian'
    - not xbutil.stat.exists

- name: Ensure XRT is sourced in ~/.bashrc
  lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    regexp: "^source /opt/xilinx/xrt/setup.sh"
    line: source /opt/xilinx/xrt/setup.sh
  when:
    - xilinx_xrt_install | bool
    - xilinx_xrt_bashrc | bool

- include_tasks: aws.yml
  when: xilinx_xrt_env == 'aws'
