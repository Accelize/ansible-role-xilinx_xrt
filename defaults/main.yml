---
# Install Xilinx XRT
xilinx_xrt_install: true

# Install Xilinx XRT from sources instead of packages
xilinx_xrt_from_src: false

# Add "source /opt/xilinx/xrt/setup.sh" to user "~/.bashrc"
xilinx_xrt_bashrc: false

# Xilinx XRT environement, default to Xilinx classical environement
_xilinx_xrt_env: "{{ xilinx_xrt_env | default('') }}"

# Xilinx XRT version to install (Default to latest available
xilinx_xrt_version: "{{ _xilinx_xrt_env | xrt_latest(ansible_facts) }}"

# Linux kernel version compatibles with XRT
xilinx_xrt_ensure_compatible_kernel: true

# Check if properly installed by trying to detect FPGA
xilinx_xrt_check_fpga: false

# Run inside a container
xilinx_xrt_container: false

# Red Hat Developer Toolset CentOS 7 fallback version
xilinx_xrt_rhel7_devtoolset: 9

# If true and xilinx_xrt_env is "aws", install AWS FPGA runtimes
aws_fpga_install: true

# AWS: Allow access to FPGA for users in "aws_fpga_sdk_group" group
aws_fpga_allow_non_root: false
aws_fpga_sdk_others: false
aws_fpga_sdk_group: fpgauser
aws_fpga_sdk_override_group: false

# Xilinx Video SDK
xilinx_video_sdk_install: false

# Internals variables
# -------------------

xrt_package: "{{ xilinx_xrt_version |
              xrt_pkg_name('xrt', _xilinx_xrt_env, ansible_facts)}}"
xrt_source: "{{ xilinx_xrt_version |
             xrt_pkg_src('xrt', _xilinx_xrt_env, ansible_facts)}}"

env_package: "{{ xilinx_xrt_version |
              xrt_pkg_name(_xilinx_xrt_env, _xilinx_xrt_env, ansible_facts)}}"
env_source: "{{ xilinx_xrt_version |
             xrt_pkg_src(_xilinx_xrt_env, _xilinx_xrt_env, ansible_facts)}}"

xrt_required_kernel: "{{ xilinx_xrt_version | xrt_kernel(ansible_facts) }}"

xrt_name: "{{ ((xilinx_xrt_version | string) in ['2018.2', '2018.3', '2019.1']) | ternary('sdaccel', 'vitis') }}"
aws_fpga_xrt_setup: "{{ xrt_name }}_runtime"
